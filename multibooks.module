<?php
// $Id:


/**
 * Implementation of hook_perm().
 */
function multibooks_perm() {
  return array('edit secondary books');
}


/**
 * Implementation of hook_nodeapi().
 */
function multibooks_nodeapi(&$node, $op, $teaser, $page) {
  switch($op) {
    case 'update':
      _multibooks_update($node);
      break;
  }
}


/**
 * Implementation of hook_form_alter().
 */
function multibooks_form_alter(&$form, $form_state, $form_id) {
  if ((isset($form['#node'])) && ($form_id == $form['#node']->type . '_node_form')) {
    $options = array(0 => '<'. t('none') .'>');
    foreach (book_get_books() as $book) {
      $options[$book['nid']] = $book['title'];
    }

    $form['book']['secondary_book'] = array(
      '#type' => 'select',
      '#options' => $options,
      '#title' => t('Secondary book'),
      '#default_value' => $node->secondary_book,
      '#description' => t('Your page will also be a part of the selected book.'),
      '#weight' => 5
    );
  }
}


/**
 * Insert menu links for the node in its secondary books.
 */
function _multibooks_update($node) {
  db_query("DELETE FROM {multibooks} WHERE nid = %d", $node->nid);
  db_query("INSERT INTO {multibooks} (nid, secondary_parent) VALUES(%d, %d)",
    $node->nid,
    $node->book['secondary_book'] 
  );
  $menu_link = array(
    'link_title' => $node->title,
    'menu_name' => "book-toc-{$node->book['secondary_book']}",
    'link_path' => "node/{$node->nid}",
    'router_path' => "node/%",
    'module' => "multibooks",
    'plid' => $node->book['plid'],
  );
  menu_link_save($menu_link);
}
